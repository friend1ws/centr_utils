#! /usr/bin/env python

import argparse

from .run import *
from .version import __version__

def create_parser():

    parser = argparse.ArgumentParser(prog = "centr_utils")

    parser.add_argument("--version", action = "version", version = "%(prog)s " + __version__)

    subparsers = parser.add_subparsers()

    ##########
    split_to_monomer = subparsers.add_parser("split_to_monomer",
                                              help = "Split fasta sequences to alpha satellite monomer elements")

    split_to_monomer.add_argument("input_fasta_file", default = None, type = str,
                                  help = "Path to FASTA file")

    split_to_monomer.add_argument("output_file", default = None, type = str,
                                  help = "Patht to output file")

    split_to_monomer.add_argument("hmm_model_fwd", default = None, type = str,
                                   help = "Path to forward HMM file")

    split_to_monomer.add_argument("hmm_model_rev", default = None, type = str,
                                  help = "Patht to reverse HMM file")

    split_to_monomer.add_argument("--min_monomer_len", default = 150, type = int,
                                  help = "Minimum monomer length")

    split_to_monomer.set_defaults(func = split_to_monomer_main)
    ##########

    ##########
    monomer_graph_analysis = subparsers.add_parser("monomer_graph_analysis",
                                             help = "Investigate monomer order to obtain HORs")

    monomer_graph_analysis.add_argument("input_fasta_file", default = None, type = str,
                                        help = "Path to FASTA file")

    monomer_graph_analysis.add_argument("monomer_fasta_file", default = None, type = str,
                                        help = "Path to monomer FASTA file generated by split_to_monomer function")

    monomer_graph_analysis.add_argument("output_prefix", default = None, type = str,
                                        help = "Prefix of Path to output files")

    monomer_graph_analysis.add_argument('--mean_monomer_len', default = 170, type = int,
                                        help = "Average length of a monomer")

    monomer_graph_analysis.add_argument("--head_to_tail_dist", default = 8, type = int,
                                        help = "Maximum allowed head-to-tail distance between two adjacent monomers")

    monomer_graph_analysis.add_argument("--min_fasta_len", default = 2000, type = int,
                                        help = "Minimum allowed read length")

    monomer_graph_analysis.add_argument("--thres_list", default = [0.98, 0.97, 0.96, 0.95, 0.94, 0.93, 0.92, 0.91, 0.9, 0.89, 0.88], type = float,
                                        help = "Specifies a clustering threshold. Values sorted and tested in descending order")

    monomer_graph_analysis.set_defaults(func = monomer_graph_analysis_main)
    ##########

    return parser

